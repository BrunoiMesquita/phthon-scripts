before_script:
  - apt-get update -qy || true
  - apt-get install -y python-dev python-pip zip || true

variables:
  #DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_IMAGE: $CI_REGISTRY_USER/$CI_PROJECT_NAME

stages:
  - test
  - build-dev
  - build-prod
  - deploy
  
test:
  image: python:2
  stage: test
  script:
    - pip install -r requirements.txt
    - python -m pylint --exit-zero app/app.py 


build-dev:
  except:
    - merge_requests
  image: docker:latest
  stage: build-dev
  script:
    - env
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
    - docker build --tag $DOCKER_IMAGE:dev .
    - docker push $DOCKER_IMAGE:dev

build-prod:
  only:
    - merge_requests
  image: docker:latest
  stage: build-prod
  script:
    - env
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
    - docker build  --tag $DOCKER_IMAGE:$CI_COMMIT_SHA --tag $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHA
    - docker push $DOCKER_IMAGE:latest

deploy:
  only:
    - merge_requests
  image: vemcompy/ansible:2.5
  stage: deploy
  script:
    - ansible-playbook -i ansible_hosts  ansible_task.yml --extra-vars  "ansible_container_name=$CI_PROJECT_NAME ansible_container_image=$DOCKER_IMAGE:$CI_COMMIT_SHA   ansible_container_port=3000:3000" --extra-vars "ansible_password=$ANSIBLE_PASSWORD ansible_sudo_pass=$ANSIBLE_PASSWORD ansible_ssh_user=$ANSIBLE_USER" 
